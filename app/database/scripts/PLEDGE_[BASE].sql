DECLARE @TLC AS VARCHAR(5) = 'TLC'
      , @AP AS VARCHAR(20) = 'ACTION PARTNER'
      , @CUREONE AS VARCHAR(10) = 'CURE ONE'
      , @CS AS VARCHAR(20) = 'COUNTRY SUPPORT'
      , @PS AS VARCHAR(20) = 'PERSONAL SUPPORT'
      , @UNDEF AS VARCHAR(15) = 'UNCATEGORIZED'
      , @BLANK AS VARCHAR(7) =/*<BLANK_STR>*/NULL/*</BLANK_STR>*/;
WITH
-- --------------------------------------------------------------
cte_pledge_types as (
  SELECT [SOURCECODE]
  ,[PLEDGE_CATEGORY] =
    CASE WHEN SOURCECODE = 'TLCSPON'
      THEN @TLC ELSE
    CASE WHEN SOURCECODE IN ('SACTIONP','ACTCRA','ACTCRM','SCEDU')
      THEN @AP ELSE
    CASE WHEN SOURCECODE = 'SPERSON'
      THEN @PS ELSE
    CASE WHEN SOURCECODE IN ('SCOUNTRY','SPNEPAL','SPNG', 'SNIGER', 'SINDIA', 'STHAIL', 'SNIGERIA', 'SMYANM', 'AETIMO', 'SETIMOR', 'SNIGERIA', 'SCHINA', 'SCONGO')
      THEN @CS ELSE
    CASE WHEN SOURCECODE LIKE '%SCURE%' OR SOURCECODE IN ('CUREONE1', 'CUREONE2')
      THEN @CUREONE ELSE @UNDEF
    END END END END END
  FROM TBL_SOURCECODE
  WHERE SOURCETYPE LIKE '%SPONSORSHIP'
)
-- --------------------------------------------------------------
, cte_pledge_frequency AS(
SELECT *
FROM (VALUES
    ('Tri-Yearly', 1095),
    ('Annually', 365),
    ('Half Yearly', 183),
    ('Quarterly', 90),
    ('Monthly', 30),
    ('Four-Weekly', 28),
    ('Bi-Monthly', 15),
    ('Fortnightly', 14),
    ('Weekly', 7),
    ('One Off', 1)
  ) AS frequency(PAYMENTFREQUENCY, DAYS)
)
-- --------------------------------------------------------------
, cte_pledge_source as (
  SELECT TBL_PLEDGEDESTINATION.[PLEDGEID]
    ,[SOURCETYPE]=MIN(TBL_SOURCECODE.SOURCETYPE)
    ,[SOURCECODES]=COUNT(TBL_PLEDGEDESTINATION.SOURCECODE)
    ,[FIRST_SOURCECODE1]=IIF(RTRIM(ISNULL(MIN(TBL_PLEDGEDESTINATION.SOURCECODE),''))='',@BLANK, MIN(TBL_PLEDGEDESTINATION.SOURCECODE))
    ,[FIRST_SOURCECODE2]=IIF(RTRIM(ISNULL(MIN(TBL_PLEDGEDESTINATION.SOURCECODE2),''))='',@BLANK, MIN(TBL_PLEDGEDESTINATION.SOURCECODE2))
    ,[FIRST_DESTINATION1]=IIF(RTRIM(ISNULL(MIN(TBL_PLEDGEDESTINATION.DESTINATIONCODE),''))='',@BLANK, MIN(TBL_PLEDGEDESTINATION.DESTINATIONCODE))
    ,[FIRST_DESTINATION2]=IIF(RTRIM(ISNULL(MIN(TBL_PLEDGEDESTINATION.DESTINATIONCODE2),''))='',@BLANK, MIN(TBL_PLEDGEDESTINATION.DESTINATIONCODE2))
  FROM
    TBL_PLEDGEDESTINATION
    LEFT JOIN TBL_SOURCECODE ON (TBL_PLEDGEDESTINATION.SOURCECODE = TBL_SOURCECODE.SOURCECODE)
  GROUP BY PLEDGEID
)
-- --------------------------------------------------------------
, cte_legit_pledge as (
  SELECT P1.PLEDGEID
    -- Contact Name and Serial Number
    ,P1.SERIALNUMBER
    ,[FULLNAME] = CONCAT(IIF(P1.TITLE IS NULL,'', P1.TITLE + ' '), IIF(P1.FIRSTNAME IS NULL,'', P1.FIRSTNAME + ' '), P1.KEYNAME)
    -- Key Dates ( New, On Hold, WrittenDown )
    ,P1.CREATEDBY, P1.CREATED
    ,P1.STARTDATE, P1.ENDDATE
    ,P1.ONHOLDDATETIME
    ,P1.WRITTENDOWN
    ,[CLOSED] = CASE WHEN P1.PLEDGEPLAN NOT LIKE '%Continuous%' AND RTRIM(P1.PLEDGESTATUS) = 'Closed' THEN P1.ENDDATE ELSE NULL END
    ,[FINISHED] = CASE WHEN P1.PLEDGEPLAN NOT LIKE '%Continuous%' AND RTRIM(P1.PLEDGESTATUS) = 'Closed' THEN P1.NEXTCALLDATE ELSE NULL END

    ,[CREATED_FY] = YEAR(P1.CREATED) + CASE WHEN MONTH(P1.CREATED) < 7 THEN 0 ELSE 1 END
    ,[START_FY] = YEAR(P1.STARTDATE) + CASE WHEN MONTH(P1.STARTDATE) < 7 THEN 0 ELSE 1 END
    ,[END_FY] = YEAR(P1.ENDDATE) + CASE WHEN MONTH(P1.ENDDATE) < 7 THEN 0 ELSE 1 END
    ,[ONHOLD_FY] = YEAR(P1.ONHOLDDATETIME) + CASE WHEN MONTH(P1.ONHOLDDATETIME) < 7 THEN 0 ELSE 1 END
    ,[WRITTENDOWN_FY] = YEAR(P1.WRITTENDOWN) + CASE WHEN MONTH(P1.WRITTENDOWN) < 7 THEN 0 ELSE 1 END
    ,[CLOSED_FY] =
        CASE WHEN P1.PLEDGEPLAN NOT LIKE '%Continuous%' AND RTRIM(P1.PLEDGESTATUS) = 'Closed'
        THEN YEAR(P1.ENDDATE) + CASE WHEN MONTH(P1.ENDDATE) < 7 THEN 0 ELSE 1 END
        ELSE NULL
        END
    ,[FINISHED_FY] =
        CASE WHEN P1.PLEDGEPLAN NOT LIKE '%Continuous%' AND RTRIM(P1.PLEDGESTATUS) = 'Closed'
        THEN YEAR(P1.NEXTCALLDATE) + CASE WHEN MONTH(P1.NEXTCALLDATE) < 7 THEN 0 ELSE 1 END
        ELSE NULL
        END

    ,[ONHOLDBY] = CASE WHEN RTRIM(P1.ONHOLDBY) = '' THEN NULL ELSE RTRIM(P1.ONHOLDBY) END
    ,[ONHOLDREASON] = CASE WHEN RTRIM(ISNULL(P1.ONHOLDBY,'')) <> '' AND (RTRIM(P1.ONHOLDREASON) = '' OR P1.ONHOLDREASON IS NULL) THEN @BLANK ELSE RTRIM(P1.ONHOLDREASON) END
    ,[WRITTENDOWNBY] = CASE WHEN RTRIM(P1.WRITTENDOWNBY) = '' THEN NULL ELSE RTRIM(P1.WRITTENDOWNBY) END
    ,[WRITTENDOWNREASON] = CASE WHEN RTRIM(ISNULL(P1.WRITTENDOWNBY,'')) <> '' AND (RTRIM(P1.WRITTENDOWNREASON) = '' OR P1.WRITTENDOWNREASON IS NULL) THEN @BLANK ELSE RTRIM(P1.WRITTENDOWNREASON) END
    -- Campaign Information
    ,[ACQUISITION_CAMPAIGNCODE] = CASE WHEN RTRIM(ISNULL(P1.RECRUITMENTMETHOD,''))='' THEN @BLANK ELSE P1.RECRUITMENTMETHOD END
    ,[ACQUISITION_DETAIL] = CASE WHEN RTRIM(ISNULL(P1.PLEDGERECRUITEDBY,''))=''THEN @BLANK ELSE P1.PLEDGERECRUITEDBY END
    -- Key Data Fields that should not be null or blank
    ,[PLEDGESTATUS] = CASE WHEN RTRIM(ISNULL(P1.PLEDGESTATUS,''))='' THEN @BLANK ELSE P1.PLEDGESTATUS END
    ,[DESCRIPTION] = CASE WHEN RTRIM(ISNULL(P1.DESCRIPTION,''))='' THEN @BLANK ELSE P1.DESCRIPTION END
    ,[PLEDGEPLAN] = CASE WHEN RTRIM(ISNULL(P1.PLEDGEPLAN,''))='' THEN @BLANK ELSE P1.PLEDGEPLAN END
    ,[LIFESPAN] = CASE WHEN RTRIM(ISNULL(P1.PLEDGEPLAN,''))=''
                  THEN @BLANK
                  ELSE CASE WHEN P1.PLEDGEPLAN = 'Continuous' THEN 'Infinite' ELSE 'Finite' END
                  END
    ,[PLEDGETYPE] = CASE WHEN RTRIM(ISNULL(P1.PLEDGETYPE,''))='' THEN @BLANK ELSE P1.PLEDGETYPE END
    ,[PAYMENTFREQUENCY] = CASE WHEN RTRIM(ISNULL(P1.PAYMENTFREQUENCY,''))='' THEN @BLANK ELSE P1.PAYMENTFREQUENCY END
    ,[PAYMENTFREQUENCY_DAYS] = CASE WHEN RTRIM(ISNULL(P1.PAYMENTFREQUENCY,''))='' THEN 0 ELSE FQ.DAYS END
    ,[PAYMENTTYPE] = CASE WHEN P1.PAYMENTTYPE IS NULL OR RTRIM(P1.PAYMENTTYPE)='' THEN @BLANK ELSE P1.PAYMENTTYPE END
    -- Pledge Header Financial (stands alone)
    ,[INSTALMENTVALUE] = ISNULL(P1.INSTALMENTVALUE,0)
    ,[INSTALMENTVALUE_PER_DAY] = CASE WHEN RTRIM(ISNULL(P1.PAYMENTFREQUENCY,''))='' THEN 0 ELSE (ISNULL(P1.INSTALMENTVALUE,0)/FQ.DAYS) END
    ,[TOTALPAID] = ISNULL(P1.TOTALPAID,0)
    -- Credit Card Expiry
    ,[CREDITCARDEXPIRY] = CASE WHEN RTRIM(p1.CREDITCARDEXPIRY) = '' OR p1.CREDITCARDEXPIRY IS NULL THEN NULL ELSE RTRIM(p1.CREDITCARDEXPIRY) END
    -- Source Codes and Destination Codes
    ,P2.SOURCECODES
    ,P2.FIRST_SOURCECODE1, P2.FIRST_SOURCECODE2, P2.FIRST_DESTINATION1, P2.FIRST_DESTINATION2
    -- Pledge Category 1 & 2 plus life time
    ,[SPONSORSHIP1]=PT.PLEDGE_CATEGORY
    ,[SPONSORSHIP2]=IIF(PT.PLEDGE_CATEGORY = @TLC, PT.PLEDGE_CATEGORY,
      IIF(PT.PLEDGE_CATEGORY = @AP, PT.PLEDGE_CATEGORY,
        IIF(PT.PLEDGE_CATEGORY = @PS, CONCAT(PT.PLEDGE_CATEGORY,': ', UPPER(P2.FIRST_DESTINATION2)),
          IIF(PT.PLEDGE_CATEGORY = @CS, CONCAT(PT.PLEDGE_CATEGORY,': ', UPPER(P2.FIRST_DESTINATION1)),
            IIF(PT.PLEDGE_CATEGORY = @CUREONE
            , IIF(P2.FIRST_SOURCECODE1 LIKE '%CURE%R', @CUREONE + ' RENEW', @CUREONE +' ACQUISITION')
            , @UNDEF)
          )
        )
      )
    )
    ,[SPONSORSHIP1_COLOR]=
      CASE WHEN PT.PLEDGE_CATEGORY = @TLC     THEN '#007dc3' ELSE
      CASE WHEN PT.PLEDGE_CATEGORY = @AP  THEN '#fdbb30' ELSE
      CASE WHEN PT.PLEDGE_CATEGORY = @PS      THEN '#a560e8' ELSE
      CASE WHEN PT.PLEDGE_CATEGORY = @CS      THEN '#4dc47d' ELSE
      CASE WHEN PT.PLEDGE_CATEGORY = @CUREONE THEN '#e64b50' ELSE '#b0a696'
      END END END END END
  FROM
    TBL_PLEDGEHEADER P1
    LEFT JOIN cte_pledge_source P2 ON (P1.PLEDGEID=P2.PLEDGEID)
    LEFT JOIN cte_pledge_types PT ON (P2.FIRST_SOURCECODE1=PT.SOURCECODE)
    LEFT JOIN cte_pledge_frequency FQ ON (P1.PAYMENTFREQUENCY=FQ.PAYMENTFREQUENCY)
  WHERE
    P2.SOURCETYPE LIKE '%SPONSORSHIP'
    -- AND (RTRIM(ISNULL(P1.EXTERNALREF,''))='') AND (RTRIM(ISNULL(P1.EXTERNALREFTYPE,''))='')
    -- AND (P1.DESCRIPTION IS NULL OR P1.DESCRIPTION NOT LIKE '%MERCHANDISE%')
)
-- --------------------------------------------------------------
-- , cte_pledge_total as (
--   SELECT
--     TBL_BATCHITEMPLEDGE.PLEDGEID
--     ,[LTD_TOTAL] = SUM(TBL_BATCHITEMPLEDGE.PAYMENTAMOUNT)
--     ,[PAID_INSTALMENTS] = COUNT(DISTINCT TBL_BATCHITEMPLEDGE.PLEDGELINENO)
--   FROM
--     TBL_BATCHITEMPLEDGE
--     LEFT JOIN TBL_BATCHITEM ON (TBL_BATCHITEMPLEDGE.ADMITNAME = TBL_BATCHITEM.ADMITNAME AND TBL_BATCHITEMPLEDGE.RECEIPTNO = TBL_BATCHITEM.RECEIPTNO AND TBL_BATCHITEMPLEDGE.SERIALNUMBER = TBL_BATCHITEM.SERIALNUMBER)
--   WHERE
--     TBL_BATCHITEM.REVERSED IS NULL OR NOT(TBL_BATCHITEM.REVERSED=1 OR TBL_BATCHITEM.REVERSED=-1)
--   GROUP BY
--     TBL_BATCHITEMPLEDGE.PLEDGEID
-- )
, cte_pledge_total as (
  SELECT
    Tbl_PLEDGEINSTALMENTS_CLOSED.PLEDGEID
    ,[LTD_TOTAL] = SUM(Tbl_PLEDGEINSTALMENTS_CLOSED.AMOUNTPAID)
    ,[PAID_INSTALMENTS] = COUNT(DISTINCT Tbl_PLEDGEINSTALMENTS_CLOSED.INSTALMENTID)
  FROM
    Tbl_PLEDGEINSTALMENTS_CLOSED
  GROUP BY
    Tbl_PLEDGEINSTALMENTS_CLOSED.PLEDGEID
)
-- --------------------------------------------------------------
, cte_pledge_due as (
  SELECT
    DUE.PLEDGEID
    , [FIRST_DUE] = MIN(DUE.DATEDUE)
    , [IS_OVERDUE] = IIF(MIN(DUE.DATEDUE) IS NULL, 1, IIF(MIN(DUE.DATEDUE)<CAST(CURRENT_TIMESTAMP AS DATE), -1, 1))
  FROM
    TBL_PLEDGEINSTALMENTS_ACTIVE AS DUE
  GROUP BY
    DUE.PLEDGEID
)
-- --------------------------------------------------------------
, cte_pledge as (
  SELECT P1.*
    ,P4.IS_OVERDUE, P4.FIRST_DUE
    ,P3.LTD_TOTAL, P3.PAID_INSTALMENTS
  FROM
    cte_legit_pledge P1
    LEFT JOIN cte_pledge_total P3 ON (P1.PLEDGEID=P3.PLEDGEID)
    LEFT JOIN cte_pledge_due P4 ON (P1.PLEDGEID=P4.PLEDGEID)
)
-- --------------------------------------------------------------
, cte_pledge_actual as (
  SELECT
    TBL_BATCHITEMPLEDGE.PLEDGEID
    ,TBL_BATCHITEMPLEDGE.PLEDGELINENO
    ,TBL_BATCHITEMPLEDGE.ADMITNAME, TBL_BATCHITEMPLEDGE.SERIALNUMBER
    ,TBL_BATCHITEM.DATEOFPAYMENT
    ,TBL_SOURCECODE.SOURCETYPE
    ,[ACTUAL_SCOURCE1] = Tbl_BATCHITEMSPLIT.SOURCECODE
    ,[ACTUAL_TOTAL] = SUM(Tbl_BATCHITEMSPLIT.PAYMENTAMOUNT)
    ,TBL_BATCHITEM.REVERSED
  FROM
    TBL_BATCHITEMPLEDGE
    LEFT JOIN TBL_BATCHITEM ON (TBL_BATCHITEMPLEDGE.ADMITNAME = TBL_BATCHITEM.ADMITNAME AND TBL_BATCHITEMPLEDGE.RECEIPTNO = TBL_BATCHITEM.RECEIPTNO AND TBL_BATCHITEMPLEDGE.SERIALNUMBER = TBL_BATCHITEM.SERIALNUMBER)
    LEFT JOIN Tbl_BATCHITEMSPLIT ON (TBL_BATCHITEMPLEDGE.ADMITNAME = Tbl_BATCHITEMSPLIT.ADMITNAME AND TBL_BATCHITEMPLEDGE.RECEIPTNO = Tbl_BATCHITEMSPLIT.RECEIPTNO AND TBL_BATCHITEMPLEDGE.SERIALNUMBER = Tbl_BATCHITEMSPLIT.SERIALNUMBER AND TBL_BATCHITEMPLEDGE.LINEID = Tbl_BATCHITEMSPLIT.LINEID)
    LEFT JOIN Tbl_BATCHHEADER ON (TBL_BATCHITEMPLEDGE.ADMITNAME = Tbl_BATCHHEADER.ADMITNAME)
    LEFT JOIN TBL_SOURCECODE ON (Tbl_BATCHITEMSPLIT.SOURCECODE = TBL_SOURCECODE.SOURCECODE)
  WHERE
    Tbl_BATCHHEADER.STAGE = 'Batch Approved'
    AND TBL_SOURCECODE.SOURCETYPE LIKE '%Sponsorship'
    AND (TBL_BATCHITEM.REVERSED IS NULL OR NOT (TBL_BATCHITEM.REVERSED=1 OR TBL_BATCHITEM.REVERSED=-1))
  GROUP BY
    TBL_BATCHITEMPLEDGE.PLEDGEID,TBL_BATCHITEMPLEDGE.ADMITNAME, TBL_BATCHITEMPLEDGE.SERIALNUMBER,TBL_BATCHITEMPLEDGE.PLEDGELINENO
    ,TBL_BATCHITEM.DATEOFPAYMENT,Tbl_BATCHITEMSPLIT.SOURCECODE,TBL_BATCHITEM.REVERSED
    ,TBL_SOURCECODE.SOURCETYPE
)
-- --------------------------------------------------------------
/*<BASE_QUERY>*/
select * from cte_pledge
/*</BASE_QUERY>*/
-- --------------------------------------------------------------
-- OPTION(RECOMPILE)
-- --------------------------------------------------------------