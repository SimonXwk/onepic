DECLARE
@CAMPAIGNCODE varchar(25) = /*<CAMPAIGN_CODE>*/'19DV.Cure One Stew'/*</CAMPAIGN_CODE>*/
, @UNSOLICITED varchar(25) = '____.Unsolicited'
, @TLC AS VARCHAR(5) = 'TLC'
, @ACTION AS VARCHAR(20) = 'ACTION PARTNER'
, @CUREONE AS VARCHAR(10) = 'CURE ONE'
, @CSP AS VARCHAR(20) = 'COUNTRY SUPPORT'
, @PSP AS VARCHAR(20) = 'PERSONAL SUPPORT'
, @AMB AS VARCHAR(15) = '_AMBIGUOUS'
;
WITH
-- -------------------------------------------------------------------------------------------------------------
cte_payment as (
    SELECT
        B1.SERIALNUMBER
        , B2.DATEOFPAYMENT
        , B1.PAYMENTAMOUNT
        , B2.REVERSED
        , B1.SOURCECODE
        , [CAMPAIGNCODE] = CASE WHEN S1.ADDITIONALCODE3 IS NULL OR RTRIM(S1.ADDITIONALCODE3) = '' OR S1.ADDITIONALCODE3 LIKE '%Unsolicited%'
            THEN
                CASE WHEN S1.SOURCETYPE LIKE '%Sponsorship' THEN
                    CASE WHEN P1.RECRUITMENTMETHOD IS NULL OR P1.RECRUITMENTMETHOD LIKE '%Unsolicited%'
                    THEN @UNSOLICITED
                    ELSE P1.RECRUITMENTMETHOD
                    END
                ELSE @UNSOLICITED
                END
            ELSE S1.ADDITIONALCODE3
            END
        , [PLEDGEID] = CASE WHEN RTRIM(B3.PLEDGEID) = '' THEN NULL ELSE B3.PLEDGEID END

        , [PLEDGETYPE] = IIF(B1.SOURCECODE = 'TLCSPON', @TLC,
            IIF(B1.SOURCECODE = 'SACTIONP', @ACTION,
            IIF(B1.SOURCECODE = 'SPERSON', @PSP,
            IIF(B1.SOURCECODE IN ('SCOUNTRY','SPNEPAL','SPNG', 'SNIGER', 'SINDIA', 'STHAIL', 'SNIGERIA', 'SMYANM', 'SETIMOR', 'SNIGERIA', 'SCHINA', 'SCONGO'), @CSP,
            IIF(B1.SOURCECODE LIKE '%SCURE%' OR B1.SOURCECODE IN ('CUREONE1', 'CUREONE2'), @CUREONE, @AMB)
            ))))
        , [TRXNUM] = CONCAT(CONVERT(VARCHAR(10), B2.DATEOFPAYMENT, 112), B2.SERIALNUMBER, B2.ADMITNAME, B2.RECEIPTNO)
        , [TRXID] = CASE WHEN B2.REVERSED=2 THEN 0
                    ELSE DENSE_RANK() OVER(PARTITION BY (CASE WHEN B2.REVERSED=2 THEN 2 ELSE NULL END) ORDER BY CONCAT(CONVERT(VARCHAR(10), B2.DATEOFPAYMENT, 112), B2.SERIALNUMBER, B2.ADMITNAME, B2.RECEIPTNO) ASC)
                    END

    FROM
        TBL_BATCHITEMSPLIT            B1
        LEFT JOIN TBL_BATCHITEM       B2 ON (B1.SERIALNUMBER = B2.SERIALNUMBER) AND (B1.RECEIPTNO = B2.RECEIPTNO) AND (B1.ADMITNAME = B2.ADMITNAME)
        LEFT JOIN TBL_BATCHITEMPLEDGE B3 ON (B1.SERIALNUMBER = B3.SERIALNUMBER) AND (B1.RECEIPTNO = B3.RECEIPTNO) AND (B1.ADMITNAME = B3.ADMITNAME) AND (B1.LINEID = B3.LINEID)
        LEFT JOIN TBL_PLEDGEHEADER    P1 ON (B3.PLEDGEID = P1.PLEDGEID)
        LEFT JOIN TBL_BATCHHEADER     B4 ON (B2.ADMITNAME = B4.ADMITNAME)
        LEFT JOIN Tbl_SOURCECODE      S1 ON (B1.SOURCECODE = S1.SOURCECODE)
    WHERE
        (B2.REVERSED IS NULL OR NOT(B2.REVERSED IN (1, -1))) AND (B4.STAGE ='Batch Approved')
        AND ( S1.ADDITIONALCODE3 = @CAMPAIGNCODE
              OR ((S1.ADDITIONALCODE3 IS NULL OR S1.ADDITIONALCODE3 = '') AND P1.RECRUITMENTMETHOD = @CAMPAIGNCODE) )
)
-- -------------------------------------------------------------------------------------------------------------
, cte_first_date AS (
    SELECT SERIALNUMBER
        , [FIRST_DATE] = MIN(DATEOFPAYMENT)
        , [LAST_DATE] = MAX(DATEOFPAYMENT)
--         , [TRX_COUNT] = DENSE_RANK() OVER(PARTITION BY SERIALNUMBER ORDER BY TRXID ASC)
    FROM cte_payment
    WHERE (REVERSED IS NULL OR NOT(REVERSED IN (1, -1, 2)))
    GROUP BY SERIALNUMBER
)
-- -------------------------------------------------------------------------------------------------------------
, cte_contact AS (
    SELECT CT1.SERIALNUMBER
        , [FULLNAME] = CONCAT(
              CASE WHEN RTRIM(CT1.TITLE)='' OR CT1.TITLE IS NULL THEN '' ELSE RTRIM(CT1.TITLE)+' ' END
            , CASE WHEN RTRIM(CT1.FIRSTNAME)='' OR CT1.FIRSTNAME IS NULL THEN '' ELSE RTRIM(CT1.FIRSTNAME)+' ' END
            , CASE WHEN RTRIM(CT1.OTHERINITIAL)='' OR CT1.OTHERINITIAL IS NULL THEN '' ELSE RTRIM(CT1.OTHERINITIAL)+' ' END
            , CT1.KEYNAME
        )
        , [MOBILENUMBER] = CASE WHEN RTRIM(CT1.MOBILENUMBER) = '' THEN NULL ELSE RTRIM(CT1.MOBILENUMBER) END
        , [DAYTELEPHONE] = CASE WHEN RTRIM(CT1.DAYTELEPHONE) = '' THEN NULL ELSE RTRIM(CT1.DAYTELEPHONE) END
        , [EVENINGTELEPHONE] = CASE WHEN RTRIM(CT1.EVENINGTELEPHONE) = '' THEN NULL ELSE RTRIM(CT1.EVENINGTELEPHONE) END
        , CT1.EMAILADDRESS
    FROM
        TBL_CONTACT CT1
    WHERE CT1.CONTACTTYPE <> 'ADDRESS'
)
-- -------------------------------------------------------------------------------------------------------------

-- select
--     t1.SERIALNUMBER
--     , t5.FULLNAME
--     , [CAMPAIGNCODE] = MIN(t1.CAMPAIGNCODE)
--     , [SOURCECODE] = MIN(t1.SOURCECODE)
--     , [FIRST_DATE] = MIN(t2.FIRST_DATE)
--     , [LAST_DATE] = MIN(t2.FIRST_DATE)
--     , [PLEDGEID] = MIN(t1.PLEDGEID)
--     , [TOTAL] = SUM(t1.PAYMENTAMOUNT)
--     , t5.MOBILENUMBER, t5.DAYTELEPHONE, t5.EVENINGTELEPHONE
--
-- from
--     cte_payment t1
--     left join cte_first_date t2 on (t1.SERIALNUMBER = t2.SERIALNUMBER)
--     left join cte_contact t5 on (t1.SERIALNUMBER = t5.SERIALNUMBER)
-- group by
--     t1.SERIALNUMBER, t1.CAMPAIGNCODE ,t1.SOURCECODE, t1.PLEDGEID
--     , t2.FIRST_DATE
--     , t5.FULLNAME, t5.MOBILENUMBER, t5.DAYTELEPHONE, t5.EVENINGTELEPHONE

select * from cte_payment
